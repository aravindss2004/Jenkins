pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'abhishekf5/maven-abhishek-docker-agent:v1'
        SONAR_TOKEN = credentials('sonarqube')
        DOCKERHUB_CREDENTIALS = credentials('docker-cred')
    }

    stages {
        stage('Checkout') {
            steps {
                echo '‚úÖ Checkout stage'
                git credentialsId: 'github', url: 'https://github.com/aravindss2004/Jenkins', branch: 'main'
            }
        }

        stage('Build and Test') {
            steps {
                echo 'üî® Building and Testing inside Docker container'
                bat """
                    docker run --rm -v %cd%:/app -w /app %DOCKER_IMAGE% mvn clean install
                """
            }
        }

        stage('Static Code Analysis') {
            steps {
                echo 'üîç Running SonarQube analysis'
                bat """
                    docker run --rm -v %cd%:/app -w /app -e SONAR_TOKEN=%SONAR_TOKEN% %DOCKER_IMAGE% mvn sonar:sonar -Dsonar.projectKey=spring-boot-app -Dsonar.host.url=http://localhost:9000 -Dsonar.login=%SONAR_TOKEN%
                """
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                echo 'üê≥ Building and pushing Docker image'
                bat """
                    docker build -t aravindss2004/spring-boot-app:latest .
                    echo %DOCKERHUB_CREDENTIALS_PSW% | docker login -u %DOCKERHUB_CREDENTIALS_USR% --password-stdin
                    docker push aravindss2004/spring-boot-app:latest
                """
            }
        }

        stage('Update Deployment File') {
            steps {
                echo 'üìù Updating Kubernetes deployment file'
                bat 'powershell -Command "(Get-Content k8s/deployment.yaml) -replace \'image:.*\', \'image: aravindss2004/spring-boot-app:latest\' | Set-Content k8s/deployment.yaml"'
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completed successfully!'
        }
        failure {
            echo '‚ùå Pipeline failed. Please check the logs.'
        }
    }
}
